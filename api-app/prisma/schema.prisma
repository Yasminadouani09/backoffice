// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  firstName String
  lastName  String
  email     String  @unique
  password  String
  phone     Int?
  address   String?
  role      String
}

model Teacher {
  id        Int    @id @default(autoincrement())
  name      String
  imageURL  String @db.LongText
  specialty String
  about     String
}

model Course {
  id            Int             @id @default(autoincrement())
  title         String
  imageURL      String          @db.LongText
  description   String?
  price         Float
  src           String?         @db.LongText
  src1          String?         @db.LongText
  src2          String?         @db.LongText
  Lesson        Lesson[]
  ProgramCourse ProgramCourse[]
}

model ProgramCourse {
  id        Int      @id @default(autoincrement())
  programId Int
  program   Program? @relation(fields: [programId], references: [id], onDelete: Cascade)
  courseId  Int
  course    Course?  @relation(fields: [courseId], references: [id], onDelete: Cascade)
}

model Program {
  id            Int             @id @default(autoincrement())
  title         String
  description   String?         @db.LongText
  duration      String?
  imageURL      String          @db.LongText
  price         Float
  Session       Session[]
  ProgramCourse ProgramCourse[]
}

model Session {
  id          Int      @id @default(autoincrement())
  title       String
  description String?  @db.LongText
  duration    String
  imageURL    String   @db.LongText
  programId   Int
  program     Program? @relation(fields: [programId], references: [id], onDelete: Cascade)
}

model Lesson {
  id            Int             @id @default(autoincrement())
  title         String
  imageURL      String          @db.LongText
  courseId      Int
  course        Course?         @relation(fields: [courseId], references: [id], onDelete: Cascade)
  LessonContent LessonContent[]
}

model LessonContent {
  id Int @id @default(autoincrement())

  typeContentId Int
  typeContent   typeContent? @relation(fields: [typeContentId], references: [id], onDelete: Cascade)
  lessonId      Int
  lesson        Lesson?      @relation(fields: [lessonId], references: [id], onDelete: Cascade)
}

model typeContent {
  id Int @id @default(autoincrement())

  LessonContent LessonContent[]
}
