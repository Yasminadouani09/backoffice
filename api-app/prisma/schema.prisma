// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int     @id @default(autoincrement())
  firstName  String
  lastName   String
  email      String  @unique
  password   String
  phone      String?
  address    String?
  role       String
 
}

model Teacher {
  id        Int    @id @default(autoincrement())
  name      String
  imageURL  String @db.LongText
  specialty String
  about     String
}

model Course {
  id          Int     @id @default(autoincrement())
  title       String
  imageURL    String  @db.LongText
  description String?
  price       Float
  src         String  @db.LongText
  src1        String  @db.LongText
  src2        String  @db.LongText

  CourseModule CourseModule[]
}

model CourseModule {
  courseId Int
  course   Course @relation(fields: [courseId], references: [id])
  moduleId Int
  module   Module @relation(fields: [moduleId], references: [id])

  @@unique(fields: [courseId, moduleId], name: "CourseModule")
}

model Program {
  id            Int             @id @default(autoincrement())
  title         String
  description   String?         @db.LongText
  duration      String
  imageURL      String          @db.LongText
  price         Float
  ProgramModule ProgramModule[]
  Session       Session[]
}

model Session {
  id          Int      @id @default(autoincrement())
  title       String
  description String?  @db.LongText
  duration    String
  imageURL    String   @db.LongText
  programId   Int
  program     Program? @relation(fields: [programId], references: [id])
}

model ProgramModule {
  programId Int
  program   Program @relation(fields: [programId], references: [id])
  moduleId  Int
  module    Module  @relation(fields: [moduleId], references: [id])

  @@unique(fields: [programId, moduleId], name: "programModule")
}

model Module {
  id            Int             @id @default(autoincrement())
  ProgramModule ProgramModule[]
  CourseModule  CourseModule[]
}
